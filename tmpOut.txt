### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                         | alias                                            | column_type   | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------|:-------------------------------------------------|:--------------|:-------------|:-----------|
| rank            | Stores the ranking of the movie based on certain criteria, used for sorting and comparison.         | Movie Rank, Position, Ranking                    | int           |              |            |
| title           | Represents the title or name of the movie.                                                          | Movie Name, Film Title, Title                    | varchar(255)  |              | English    |
| genre           | Specifies the category or genre to which the movie belongs, aiding in categorization and filtering. | Movie Category, Film Genre, Type                 | varchar(255)  |              | English    |
| description     | Contains a brief summary or plot description of the movie.                                          | Plot Summary, Movie Synopsis, Brief Description  | varchar(255)  |              | English    |
| director        | Stores the name of the director who directed the movie.                                             | Filmmaker, Director Name, Director               | varchar(255)  |              | English    |
| actors          | Lists the main actors or actresses who starred in the movie.                                        | Cast, Actors, Actresses                          | varchar(255)  |              | English    |
| year            | Represents the release year of the movie, providing temporal information.                           | Release Year, Year of Release, Production Year   | int           |              |            |
| runtimeminutes  | Stores the duration of the movie in minutes, indicating the length of the film.                     | Duration, Film Length, Runtime                   | int           |              |            |
| rating          | Specifies the movie rating, providing an evaluation score.                                          | Movie Grade, Evaluation, Score                   | float         |              |            |
| votes           | Stores the number of votes or ratings received by the movie, indicating popularity or feedback.     | Number of Ratings, Feedback Count, Vote Count    | int           |              |            |
| revenuemillions | Represents the revenue generated by the movie in millions, reflecting its commercial success.       | Earnings in Millions, Income, Box Office Revenue | float         |              |            |
| metascore       | Stores the metascore rating of the movie, which aggregates critical reviews from various sources.   | Critics' Score, Review Score, Aggregate Rating   | float         |              |            |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                         | alias                                            | column_type   | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------|:-------------------------------------------------|:--------------|:-------------|:-----------|
| rank            | Stores the ranking of the movie based on certain criteria, used for sorting and comparison.         | Movie Rank, Position, Ranking                    | int           |              |            |
| title           | Represents the title or name of the movie.                                                          | Movie Name, Film Title, Title                    | varchar(255)  |              | English    |
| genre           | Specifies the category or genre to which the movie belongs, aiding in categorization and filtering. | Movie Category, Film Genre, Type                 | varchar(255)  |              | English    |
| description     | Contains a brief summary or plot description of the movie.                                          | Plot Summary, Movie Synopsis, Brief Description  | varchar(255)  |              | English    |
| director        | Stores the name of the director who directed the movie.                                             | Filmmaker, Director Name, Director               | varchar(255)  |              | English    |
| actors          | Lists the main actors or actresses who starred in the movie.                                        | Cast, Actors, Actresses                          | varchar(255)  |              | English    |
| year            | Represents the release year of the movie, providing temporal information.                           | Release Year, Year of Release, Production Year   | int           |              |            |
| runtimeminutes  | Stores the duration of the movie in minutes, indicating the length of the film.                     | Duration, Film Length, Runtime                   | int           |              |            |
| rating          | Specifies the movie rating, providing an evaluation score.                                          | Movie Grade, Evaluation, Score                   | float         |              |            |
| votes           | Stores the number of votes or ratings received by the movie, indicating popularity or feedback.     | Number of Ratings, Feedback Count, Vote Count    | int           |              |            |
| revenuemillions | Represents the revenue generated by the movie in millions, reflecting its commercial success.       | Earnings in Millions, Income, Box Office Revenue | float         |              |            |
| metascore       | Stores the metascore rating of the movie, which aggregates critical reviews from various sources.   | Critics' Score, Review Score, Aggregate Rating   | float         |              |            |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                         | alias                                            | column_type   | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------|:-------------------------------------------------|:--------------|:-------------|:-----------|
| rank            | Stores the ranking of the movie based on certain criteria, used for sorting and comparison.         | Movie Rank, Position, Ranking                    | int           |              |            |
| title           | Represents the title or name of the movie.                                                          | Movie Name, Film Title, Title                    | varchar(255)  |              | English    |
| genre           | Specifies the category or genre to which the movie belongs, aiding in categorization and filtering. | Movie Category, Film Genre, Type                 | varchar(255)  |              | English    |
| description     | Contains a brief summary or plot description of the movie.                                          | Plot Summary, Movie Synopsis, Brief Description  | varchar(255)  |              | English    |
| director        | Stores the name of the director who directed the movie.                                             | Filmmaker, Director Name, Director               | varchar(255)  |              | English    |
| actors          | Lists the main actors or actresses who starred in the movie.                                        | Cast, Actors, Actresses                          | varchar(255)  |              | English    |
| year            | Represents the release year of the movie, providing temporal information.                           | Release Year, Year of Release, Production Year   | int           |              |            |
| runtimeminutes  | Stores the duration of the movie in minutes, indicating the length of the film.                     | Duration, Film Length, Runtime                   | int           |              |            |
| rating          | Specifies the movie rating, providing an evaluation score.                                          | Movie Grade, Evaluation, Score                   | float         |              |            |
| votes           | Stores the number of votes or ratings received by the movie, indicating popularity or feedback.     | Number of Ratings, Feedback Count, Vote Count    | int           |              |            |
| revenuemillions | Represents the revenue generated by the movie in millions, reflecting its commercial success.       | Earnings in Millions, Income, Box Office Revenue | float         |              |            |
| metascore       | Stores the metascore rating of the movie, which aggregates critical reviews from various sources.   | Critics' Score, Review Score, Aggregate Rating   | float         |              |            |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                         | alias                                            | column_type   | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------|:-------------------------------------------------|:--------------|:-------------|:-----------|
| rank            | Stores the ranking of the movie based on certain criteria, used for sorting and comparison.         | Movie Rank, Position, Ranking                    | int           |              |            |
| title           | Represents the title or name of the movie.                                                          | Movie Name, Film Title, Title                    | varchar(255)  |              | English    |
| genre           | Specifies the category or genre to which the movie belongs, aiding in categorization and filtering. | Movie Category, Film Genre, Type                 | varchar(255)  |              | English    |
| description     | Contains a brief summary or plot description of the movie.                                          | Plot Summary, Movie Synopsis, Brief Description  | varchar(255)  |              | English    |
| director        | Stores the name of the director who directed the movie.                                             | Filmmaker, Director Name, Director               | varchar(255)  |              | English    |
| actors          | Lists the main actors or actresses who starred in the movie.                                        | Cast, Actors, Actresses                          | varchar(255)  |              | English    |
| year            | Represents the release year of the movie, providing temporal information.                           | Release Year, Year of Release, Production Year   | int           |              |            |
| runtimeminutes  | Stores the duration of the movie in minutes, indicating the length of the film.                     | Duration, Film Length, Runtime                   | int           |              |            |
| rating          | Specifies the movie rating, providing an evaluation score.                                          | Movie Grade, Evaluation, Score                   | float         |              |            |
| votes           | Stores the number of votes or ratings received by the movie, indicating popularity or feedback.     | Number of Ratings, Feedback Count, Vote Count    | int           |              |            |
| revenuemillions | Represents the revenue generated by the movie in millions, reflecting its commercial success.       | Earnings in Millions, Income, Box Office Revenue | float         |              |            |
| metascore       | Stores the metascore rating of the movie, which aggregates critical reviews from various sources.   | Critics' Score, Review Score, Aggregate Rating   | float         |              |            |

### Output:

------------
