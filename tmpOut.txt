### Task Description:
Given the descriptions of multiple database tables and a natural language sentence in English, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table1", "table2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "response1"
}
```

### Input: 

** Natural Language Sentence: **
请给我推荐电影
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "response"
}
```

### Input: 

** Natural Language Sentence: **
请给我推荐电影
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "response"
}
```

### Input: 

** Natural Language Sentence: **
给我2000年以后所有的电影
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "response"
}
```

### Input: 

** Natural Language Sentence: **
请给我2000年之后所有电影
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "response"
}
```

### Input: 

** Natural Language Sentence: **
请给我2000年之后所有电影
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "response"
}
```

### Input: 

** Natural Language Sentence: **
请给我2000年之后所有电影
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "response"
}
```

### Input: 

** Natural Language Sentence: **
find all the movies after 2000 year
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "response"
}
```

### Input: 

** Natural Language Sentence: **
find all the movies after 2000 year
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "response"
}
```

### Input: 

** Natural Language Sentence: **
find all the movies after 2000 year
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
hello world
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
What are the different genres present in the IMDb movie dataset?
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
What are the different genres present in the IMDb movie dataset before 2000 year?
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
What are the different genres present in the IMDb movie dataset before 2000 year?
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出2000年之后的电影
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请推荐电影
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请推荐电影
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
你好，请问你知道今天天气吗
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
你知道如何查询电脑价格吗？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
你好，请问你知道今天天气吗
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
你知道如何查询电脑价格吗？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
今天天气哈哈哈
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
请列出数据库中所有的表名和列名。
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
Find the types of fans available in the database.
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
収益が最も高い映画は何ですか？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
你好，请问你知道今天天气吗
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
### Task Description:
Given the descriptions of multiple database tables and a natural language sentence, determine whether the sentence is a query related to the database. 
If it is, select one or more relevant database table names. 
If not, handle it as a chat and generate a response in English.

### Requirements:
Please strictly follow the JSON format of the output example.

### Output example:

1. **If the input is a query related to the database:**
```json
{
  "tables": ["table name1", "table name2"]
}
```
2. **If the input is unrelated to the given database:**
```json
{
  "chat": "<response1>"
}
```

### Input: 

** Natural Language Sentence: **
你知道如何查询电脑价格吗？
** Database Schema: **
Table:imdb_movie_dataset
| column_name     | column_desc                                                                                                     | alias                                          | column_type       | column_key   | val_lang   |
|:----------------|:----------------------------------------------------------------------------------------------------------------|:-----------------------------------------------|:------------------|:-------------|:-----------|
| metascore       | Stores the metascore rating of the movie, providing a critical assessment of its quality.                       | Meta Rating, Critics Score, Review Score       | double precision  |              |            |
| runtimeminutes  | Records the duration of the movie in minutes, indicating the length of the film.                                | Duration, Movie Length, Runtime                | integer           |              |            |
| rating          | Stores the rating of the movie, representing its overall quality or audience reception.                         | Movie Rating, Viewer Rating, IMDb Rating       | double precision  |              |            |
| votes           | Tracks the number of votes or ratings the movie has received, indicating its popularity or engagement.          | Voting Count, Rating Count, Popularity Votes   | integer           |              |            |
| revenuemillions | Stores the revenue generated by the movie in millions, reflecting its commercial success.                       | Revenue, Box Office Revenue, Earnings          | double precision  |              |            |
| rank            | Indicates the ranking of the movie in comparison to others, based on specific criteria.                         | Movie Ranking, Position, Top List Position     | integer           |              |            |
| year            | Records the year when the movie was released, providing temporal information.                                   | Release Year, Production Year, Year of Release | integer           |              |            |
| title           | Contains the title or name of the movie, identifying it uniquely within the dataset.                            | Movie Title, Film Name, Title Name             | character varying |              | English    |
| genre           | Stores the genre or category of the movie, classifying it based on thematic elements.                           | Movie Genre, Film Category, Genre Type         | character varying |              | English    |
| description     | Contains a brief description or summary of the movie, providing additional context or information.              | Summary, Plot Description, Movie Synopsis      | character varying |              | English    |
| director        | Stores the name of the director who helmed the movie, identifying the individual responsible for its direction. | Film Director, Director Name, Directorial Lead | character varying |              | English    |
| actors          | Contains the names of the actors who starred in the movie, listing the cast members.                            | Cast, Actors List, Starring Actors             | character varying |              | English    |

### Output:

------------
